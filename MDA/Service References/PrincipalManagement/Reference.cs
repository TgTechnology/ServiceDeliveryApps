//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MDA.PrincipalManagement {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.microsoft.com/iptv/bss2", ConfigurationName="PrincipalManagement.PrincipalManagementInterfaceSoap")]
    public interface PrincipalManagementInterfaceSoap {
        
        // CODEGEN: Parameter 'keyName' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/RemoveDeviceValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.RemoveDeviceValuesResponse RemoveDeviceValues(MDA.PrincipalManagement.RemoveDeviceValuesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/RemoveDeviceValues", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.RemoveDeviceValuesResponse> RemoveDeviceValuesAsync(MDA.PrincipalManagement.RemoveDeviceValuesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/SetGlobalValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void SetGlobalValue(string key, string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/SetGlobalValue", ReplyAction="*")]
        System.Threading.Tasks.Task SetGlobalValueAsync(string key, string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/RemoveGlobalValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void RemoveGlobalValue(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/RemoveGlobalValue", ReplyAction="*")]
        System.Threading.Tasks.Task RemoveGlobalValueAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/GetGlobalValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetGlobalValueResponse")]
        MDA.PrincipalManagement.UserstoreNameValue[] GetGlobalValue(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/GetGlobalValue", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GetGlobalValueResponse")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.UserstoreNameValue[]> GetGlobalValueAsync(string key);
        
        // CODEGEN: Parameter 'principalGRCMembership' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/UpdateGRCMembership", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.UpdateGRCMembershipResponse UpdateGRCMembership(MDA.PrincipalManagement.UpdateGRCMembershipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/UpdateGRCMembership", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.UpdateGRCMembershipResponse> UpdateGRCMembershipAsync(MDA.PrincipalManagement.UpdateGRCMembershipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/SetGRCMembership", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void SetGRCMembership(MDA.PrincipalManagement.PrincipalGRCMembership principalGRCMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/SetGRCMembership", ReplyAction="*")]
        System.Threading.Tasks.Task SetGRCMembershipAsync(MDA.PrincipalManagement.PrincipalGRCMembership principalGRCMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/RemoveGRCMembership", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void RemoveGRCMembership(MDA.PrincipalManagement.AccountPrincipalExternalId accountExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/RemoveGRCMembership", ReplyAction="*")]
        System.Threading.Tasks.Task RemoveGRCMembershipAsync(MDA.PrincipalManagement.AccountPrincipalExternalId accountExternalID);
        
        // CODEGEN: Parameter 'GetGRCMembershipResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetGRCMembership", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.GetGRCMembershipResponse GetGRCMembership(MDA.PrincipalManagement.GetGRCMembershipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetGRCMembership", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.GetGRCMembershipResponse> GetGRCMembershipAsync(MDA.PrincipalManagement.GetGRCMembershipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetStreamManagementProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.StreamManagementProfile GetStreamManagementProfile(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetStreamManagementProfile", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.StreamManagementProfile> GetStreamManagementProfileAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/RemoveStreamManagementProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void RemoveStreamManagementProfile(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/RemoveStreamManagementProfile", ReplyAction="*")]
        System.Threading.Tasks.Task RemoveStreamManagementProfileAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/SetStreamManagementProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void SetStreamManagementProfile(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType, MDA.PrincipalManagement.StreamManagementProfile profileValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/SetStreamManagementProfile", ReplyAction="*")]
        System.Threading.Tasks.Task SetStreamManagementProfileAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType, MDA.PrincipalManagement.StreamManagementProfile profileValue);
        
        // CODEGEN: Parameter 'GetGroupMembershipsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetGroupMemberships", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.GetGroupMembershipsResponse GetGroupMemberships(MDA.PrincipalManagement.GetGroupMembershipsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetGroupMemberships", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.GetGroupMembershipsResponse> GetGroupMembershipsAsync(MDA.PrincipalManagement.GetGroupMembershipsRequest request);
        
        // CODEGEN: Parameter 'groupIds' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/RemoveGroupMemberships", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.RemoveGroupMembershipsResponse RemoveGroupMemberships(MDA.PrincipalManagement.RemoveGroupMembershipsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/RemoveGroupMemberships", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.RemoveGroupMembershipsResponse> RemoveGroupMembershipsAsync(MDA.PrincipalManagement.RemoveGroupMembershipsRequest request);
        
        // CODEGEN: Parameter 'groupIds' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/SetGroupMemberships", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.SetGroupMembershipsResponse SetGroupMemberships(MDA.PrincipalManagement.SetGroupMembershipsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/SetGroupMemberships", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.SetGroupMembershipsResponse> SetGroupMembershipsAsync(MDA.PrincipalManagement.SetGroupMembershipsRequest request);
        
        // CODEGEN: Parameter 'groupIds' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/AddGroupMemberships", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.AddGroupMembershipsResponse AddGroupMemberships(MDA.PrincipalManagement.AddGroupMembershipsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/AddGroupMemberships", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.AddGroupMembershipsResponse> AddGroupMembershipsAsync(MDA.PrincipalManagement.AddGroupMembershipsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/ReadAllGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.Group1[] ReadAllGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/ReadAllGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.Group1[]> ReadAllGroupsAsync();
        
        // CODEGEN: Parameter 'groupId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/ReadGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.ReadGroupsResponse ReadGroups(MDA.PrincipalManagement.ReadGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/ReadGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.ReadGroupsResponse> ReadGroupsAsync(MDA.PrincipalManagement.ReadGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/NewUpgradeGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void NewUpgradeGroup(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/NewUpgradeGroup", ReplyAction="*")]
        System.Threading.Tasks.Task NewUpgradeGroupAsync(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/SetUpgradeGroupVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void SetUpgradeGroupVersion(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/SetUpgradeGroupVersion", ReplyAction="*")]
        System.Threading.Tasks.Task SetUpgradeGroupVersionAsync(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetUpgradeGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.UpgradeGroup[] GetUpgradeGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetUpgradeGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.UpgradeGroup[]> GetUpgradeGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetUpgradeGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.UpgradeGroup GetUpgradeGroup(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetUpgradeGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.UpgradeGroup> GetUpgradeGroupAsync(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetDeviceVersionStack", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.VersionStack GetDeviceVersionStack(MDA.PrincipalManagement.DevicePrincipalExternalId deviceExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss2/GetDeviceVersionStack", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.VersionStack> GetDeviceVersionStackAsync(MDA.PrincipalManagement.DevicePrincipalExternalId deviceExternalId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class DevicePrincipalExternalId : PrincipalIdentifier {
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountPrincipalExternalId))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceGuidPrincipalId))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupPrincipalExternalId))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DevicePrincipalExternalId))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public abstract partial class PrincipalIdentifier : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class VersionStack : object, System.ComponentModel.INotifyPropertyChanged {
        
        private UpgradeGroup branchField;
        
        private UpgradeGroup serviceGroupField;
        
        private UpgradeGroup accountGroupField;
        
        private UpgradeGroup deviceGroupField;
        
        private string deviceVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public UpgradeGroup Branch {
            get {
                return this.branchField;
            }
            set {
                this.branchField = value;
                this.RaisePropertyChanged("Branch");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public UpgradeGroup ServiceGroup {
            get {
                return this.serviceGroupField;
            }
            set {
                this.serviceGroupField = value;
                this.RaisePropertyChanged("ServiceGroup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public UpgradeGroup AccountGroup {
            get {
                return this.accountGroupField;
            }
            set {
                this.accountGroupField = value;
                this.RaisePropertyChanged("AccountGroup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public UpgradeGroup DeviceGroup {
            get {
                return this.deviceGroupField;
            }
            set {
                this.deviceGroupField = value;
                this.RaisePropertyChanged("DeviceGroup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DeviceVersion {
            get {
                return this.deviceVersionField;
            }
            set {
                this.deviceVersionField = value;
                this.RaisePropertyChanged("DeviceVersion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class UpgradeGroup : Group1 {
        
        private uint subtypeField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint Subtype {
            get {
                return this.subtypeField;
            }
            set {
                this.subtypeField = value;
                this.RaisePropertyChanged("Subtype");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpgradeGroup))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Group", Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class Group1 : Principal1 {
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Group1))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpgradeGroup))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Principal", Namespace="http://www.microsoft.com/iptv/bss2")]
    public abstract partial class Principal1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string externalIDField;
        
        private PrincipalStatus1 statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExternalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
                this.RaisePropertyChanged("ExternalID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PrincipalStatus1 Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
                this.RaisePropertyChanged("StatusSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="PrincipalStatus", Namespace="http://www.microsoft.com/iptv/bss2")]
    public enum PrincipalStatus1 {
        
        /// <remarks/>
        enabled,
        
        /// <remarks/>
        disabled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class GroupMembership : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GroupPrincipalExternalId groupExternalIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GroupPrincipalExternalId GroupExternalId {
            get {
                return this.groupExternalIdField;
            }
            set {
                this.groupExternalIdField = value;
                this.RaisePropertyChanged("GroupExternalId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class GroupPrincipalExternalId : PrincipalIdentifier {
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class StreamManagementProfile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private uint iPTVHDStreamsField;
        
        private uint iPTVSDStreamsField;
        
        private uint dTTStreamsField;
        
        private uint maxBitRateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public uint IPTVHDStreams {
            get {
                return this.iPTVHDStreamsField;
            }
            set {
                this.iPTVHDStreamsField = value;
                this.RaisePropertyChanged("IPTVHDStreams");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public uint IPTVSDStreams {
            get {
                return this.iPTVSDStreamsField;
            }
            set {
                this.iPTVSDStreamsField = value;
                this.RaisePropertyChanged("IPTVSDStreams");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public uint DTTStreams {
            get {
                return this.dTTStreamsField;
            }
            set {
                this.dTTStreamsField = value;
                this.RaisePropertyChanged("DTTStreams");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public uint MaxBitRate {
            get {
                return this.maxBitRateField;
            }
            set {
                this.maxBitRateField = value;
                this.RaisePropertyChanged("MaxBitRate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class GRCMembership : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte groupSetIdField;
        
        private byte groupIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public byte GroupSetId {
            get {
                return this.groupSetIdField;
            }
            set {
                this.groupSetIdField = value;
                this.RaisePropertyChanged("GroupSetId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public byte GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
                this.RaisePropertyChanged("GroupId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class PrincipalGRCMembership : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AccountPrincipalExternalId principalField;
        
        private GRCMembership[] membershipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AccountPrincipalExternalId Principal {
            get {
                return this.principalField;
            }
            set {
                this.principalField = value;
                this.RaisePropertyChanged("Principal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public GRCMembership[] Membership {
            get {
                return this.membershipField;
            }
            set {
                this.membershipField = value;
                this.RaisePropertyChanged("Membership");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class AccountPrincipalExternalId : PrincipalIdentifier {
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class UserstoreNameValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class StreamAllocation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int sDStreamsField;
        
        private int hDStreamsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int SDStreams {
            get {
                return this.sDStreamsField;
            }
            set {
                this.sDStreamsField = value;
                this.RaisePropertyChanged("SDStreams");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int HDStreams {
            get {
                return this.hDStreamsField;
            }
            set {
                this.hDStreamsField = value;
                this.RaisePropertyChanged("HDStreams");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class AccountValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class DeviceValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class PinInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string pinField;
        
        private short pinTypeField;
        
        private System.DateTime enableDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Pin {
            get {
                return this.pinField;
            }
            set {
                this.pinField = value;
                this.RaisePropertyChanged("Pin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short PinType {
            get {
                return this.pinTypeField;
            }
            set {
                this.pinTypeField = value;
                this.RaisePropertyChanged("PinType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime EnableDate {
            get {
                return this.enableDateField;
            }
            set {
                this.enableDateField = value;
                this.RaisePropertyChanged("EnableDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SubscriberGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(User))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Account))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Device))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Group))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public abstract partial class Principal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string externalIDField;
        
        private PrincipalStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExternalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
                this.RaisePropertyChanged("ExternalID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PrincipalStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public enum PrincipalStatus {
        
        /// <remarks/>
        enabled,
        
        /// <remarks/>
        disabled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class SubscriberGroup : Principal {
        
        private System.Guid groupIdField;
        
        private string nameField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
                this.RaisePropertyChanged("GroupId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class User : Principal {
        
        private string pinField;
        
        private string accountExternalIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Pin {
            get {
                return this.pinField;
            }
            set {
                this.pinField = value;
                this.RaisePropertyChanged("Pin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AccountExternalId {
            get {
                return this.accountExternalIdField;
            }
            set {
                this.accountExternalIdField = value;
                this.RaisePropertyChanged("AccountExternalId");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class Account : Principal {
        
        private Device[] devicesField;
        
        private User[] usersField;
        
        private double creditLimitField;
        
        private TimeZonesEnumeration timeZoneField;
        
        private int hDStreamsField;
        
        private bool hDStreamsFieldSpecified;
        
        private int sDStreamsField;
        
        private bool sDStreamsFieldSpecified;
        
        private bool dVREnabledField;
        
        private bool dVREnabledFieldSpecified;
        
        private System.Guid recordingDeviceIdField;
        
        private bool recordingDeviceIdFieldSpecified;
        
        private string pinField;
        
        private string serviceGroupNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        public Device[] Devices {
            get {
                return this.devicesField;
            }
            set {
                this.devicesField = value;
                this.RaisePropertyChanged("Devices");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        public User[] Users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
                this.RaisePropertyChanged("Users");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double CreditLimit {
            get {
                return this.creditLimitField;
            }
            set {
                this.creditLimitField = value;
                this.RaisePropertyChanged("CreditLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public TimeZonesEnumeration TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
                this.RaisePropertyChanged("TimeZone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int HDStreams {
            get {
                return this.hDStreamsField;
            }
            set {
                this.hDStreamsField = value;
                this.RaisePropertyChanged("HDStreams");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HDStreamsSpecified {
            get {
                return this.hDStreamsFieldSpecified;
            }
            set {
                this.hDStreamsFieldSpecified = value;
                this.RaisePropertyChanged("HDStreamsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SDStreams {
            get {
                return this.sDStreamsField;
            }
            set {
                this.sDStreamsField = value;
                this.RaisePropertyChanged("SDStreams");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SDStreamsSpecified {
            get {
                return this.sDStreamsFieldSpecified;
            }
            set {
                this.sDStreamsFieldSpecified = value;
                this.RaisePropertyChanged("SDStreamsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DVREnabled {
            get {
                return this.dVREnabledField;
            }
            set {
                this.dVREnabledField = value;
                this.RaisePropertyChanged("DVREnabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DVREnabledSpecified {
            get {
                return this.dVREnabledFieldSpecified;
            }
            set {
                this.dVREnabledFieldSpecified = value;
                this.RaisePropertyChanged("DVREnabledSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid RecordingDeviceId {
            get {
                return this.recordingDeviceIdField;
            }
            set {
                this.recordingDeviceIdField = value;
                this.RaisePropertyChanged("RecordingDeviceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordingDeviceIdSpecified {
            get {
                return this.recordingDeviceIdFieldSpecified;
            }
            set {
                this.recordingDeviceIdFieldSpecified = value;
                this.RaisePropertyChanged("RecordingDeviceIdSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Pin {
            get {
                return this.pinField;
            }
            set {
                this.pinField = value;
                this.RaisePropertyChanged("Pin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ServiceGroupName {
            get {
                return this.serviceGroupNameField;
            }
            set {
                this.serviceGroupNameField = value;
                this.RaisePropertyChanged("ServiceGroupName");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class Device : Principal {
        
        private string accountExternalIdField;
        
        private string pinField;
        
        private System.Guid idField;
        
        private string versionField;
        
        private string requestedVersionField;
        
        private string resolvedVersionField;
        
        private string lastReportedVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AccountExternalId {
            get {
                return this.accountExternalIdField;
            }
            set {
                this.accountExternalIdField = value;
                this.RaisePropertyChanged("AccountExternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Pin {
            get {
                return this.pinField;
            }
            set {
                this.pinField = value;
                this.RaisePropertyChanged("Pin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RequestedVersion {
            get {
                return this.requestedVersionField;
            }
            set {
                this.requestedVersionField = value;
                this.RaisePropertyChanged("RequestedVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ResolvedVersion {
            get {
                return this.resolvedVersionField;
            }
            set {
                this.resolvedVersionField = value;
                this.RaisePropertyChanged("ResolvedVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LastReportedVersion {
            get {
                return this.lastReportedVersionField;
            }
            set {
                this.lastReportedVersionField = value;
                this.RaisePropertyChanged("LastReportedVersion");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public enum TimeZonesEnumeration {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        GMT_Minus_1200_InternationalDateLineWest,
        
        /// <remarks/>
        GMT_Minus_1100_MidwayIsland_Samoa,
        
        /// <remarks/>
        GMT_Minus_1000_Hawaii,
        
        /// <remarks/>
        GMT_Minus_0900_Alaska,
        
        /// <remarks/>
        GMT_Minus_0800_PacificTimeUSAndCanada_Tijuana,
        
        /// <remarks/>
        GMT_Minus_0700_Arizona,
        
        /// <remarks/>
        GMT_Minus_0700_Chihuahua_LaPaz_Mazatlan,
        
        /// <remarks/>
        GMT_Minus_0700_MountainTimeUSAndCanada,
        
        /// <remarks/>
        GMT_Minus_0600_CentralAmerica,
        
        /// <remarks/>
        GMT_Minus_0600_CentralTimeUSAndCanada,
        
        /// <remarks/>
        GMT_Minus_0600_Guadalajara_MexicoCity_Monterrey,
        
        /// <remarks/>
        GMT_Minus_0600_Saskatchewan,
        
        /// <remarks/>
        GMT_Minus_0500_Bogota_Lima_Quito,
        
        /// <remarks/>
        GMT_Minus_0500_EasternTimeUSAndCanada,
        
        /// <remarks/>
        GMT_Minus_0500_IndianaEast,
        
        /// <remarks/>
        GMT_Minus_0400_AtlanticTimeCanada,
        
        /// <remarks/>
        GMT_Minus_0400_Caracas_LaPaz,
        
        /// <remarks/>
        GMT_Minus_0400_Santiago,
        
        /// <remarks/>
        GMT_Minus_0330_Newfoundland,
        
        /// <remarks/>
        GMT_Minus_0300_Brasilia,
        
        /// <remarks/>
        GMT_Minus_0300_Buenos_Aires_Georgetown,
        
        /// <remarks/>
        GMT_Minus_0300_Greenland,
        
        /// <remarks/>
        GMT_Minus_0200_MidAtlantic,
        
        /// <remarks/>
        GMT_Minus_0100_Azores,
        
        /// <remarks/>
        GMT_Minus_0100_Cape_Verde_Is,
        
        /// <remarks/>
        GMT_Casablanca_Monrovia,
        
        /// <remarks/>
        GMT_GreenwichMeanTime_Dublin_Edinburgh_Lisbon_London,
        
        /// <remarks/>
        GMT_Plus_0100_Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna,
        
        /// <remarks/>
        GMT_Plus_0100_Belgrade_Bratislava_Budapest_Ljubljana_Prague,
        
        /// <remarks/>
        GMT_Plus_0100_Brussels_Copenhagen_Madrid_Paris,
        
        /// <remarks/>
        GMT_Plus_0100_Sarajevo_Skopje_Warsaw_Zagreb,
        
        /// <remarks/>
        GMT_Plus_0100_WestCentralAfrica,
        
        /// <remarks/>
        GMT_Plus_0200_Athens_Beirut_Istanbul_Minsk,
        
        /// <remarks/>
        GMT_Plus_0200_Bucharest,
        
        /// <remarks/>
        GMT_Plus_0200_Cairo,
        
        /// <remarks/>
        GMT_Plus_0200_Harare_Pretoria,
        
        /// <remarks/>
        GMT_Plus_0200_Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius,
        
        /// <remarks/>
        GMT_Plus_0200_Jerusalem,
        
        /// <remarks/>
        GMT_Plus_0300_Baghdad,
        
        /// <remarks/>
        GMT_Plus_0300_Kuwait_Riyadh,
        
        /// <remarks/>
        GMT_Plus_0300_Moscow_StPetersbug_Volgograd,
        
        /// <remarks/>
        GMT_Plus_0300_Nairobi,
        
        /// <remarks/>
        GMT_Plus_0330_Tehran,
        
        /// <remarks/>
        GMT_Plus_0400_AbuDhabi_Muscat,
        
        /// <remarks/>
        GMT_Plus_0400_Baku_Tbilsi_Yerevan,
        
        /// <remarks/>
        GMT_Plus_0430_Kabul,
        
        /// <remarks/>
        GMT_Plus_0500_Ekaterinburg,
        
        /// <remarks/>
        GMT_Plus_0500_Islamabad_Karachi_Tashkent,
        
        /// <remarks/>
        GMT_Plus_0530_Chennai_Kolkata_Mumbai_NewDelhi,
        
        /// <remarks/>
        GMT_Plus_0545_Kathmandu,
        
        /// <remarks/>
        GMT_Plus_0600_Almaty_Novosibirsk,
        
        /// <remarks/>
        GMT_Plus_0600_Astana_Dhaka,
        
        /// <remarks/>
        GMT_Plus_0600_SriJayawardenepura,
        
        /// <remarks/>
        GMT_Plus_0630_Rangoon,
        
        /// <remarks/>
        GMT_Plus_0700_Bangkok_Hanoi_Jakarta,
        
        /// <remarks/>
        GMT_Plus_0700_Kransnoyarsk,
        
        /// <remarks/>
        GMT_Plus_0800_Beijing_Chongqing_HongKong_Urumqi,
        
        /// <remarks/>
        GMT_Plus_0800_Irkutsk_UlaanBataar,
        
        /// <remarks/>
        GMT_Plus_0800_KualaLumpur_Singapore,
        
        /// <remarks/>
        GMT_Plus_0800_Perth,
        
        /// <remarks/>
        GMT_Plus_0800_Taipei,
        
        /// <remarks/>
        GMT_Plus_0900_Osaka_Sapporo_Tokyo,
        
        /// <remarks/>
        GMT_Plus_0900_Seoul,
        
        /// <remarks/>
        GMT_Plus_0900_Yakutsk,
        
        /// <remarks/>
        GMT_Plus_0930_Adelaide,
        
        /// <remarks/>
        GMT_Plus_0930_Darwin,
        
        /// <remarks/>
        GMT_Plus_1000_Brisbane,
        
        /// <remarks/>
        GMT_Plus_1000_Canberra_Melbourne_Sydney,
        
        /// <remarks/>
        GMT_Plus_1000_Guam_PortMoresby,
        
        /// <remarks/>
        GMT_Plus_1000_Hobart,
        
        /// <remarks/>
        GMT_Plus_1000_Vladivostok,
        
        /// <remarks/>
        GMT_Plus_1100_Magadan_SolomonIs_NewCaledonia,
        
        /// <remarks/>
        GMT_Plus_1200_Auckland_Wellington,
        
        /// <remarks/>
        GMT_Plus_1200_Fiji_Kamchatka_MarshallIs,
        
        /// <remarks/>
        GMT_Plus_1300_Nuku_alofa,
        
        /// <remarks/>
        GMT_Minus_0800_Tijuana_Baja_California,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class Group : Principal {
        
        private string typeField;
        
        private Principal[] principalsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(Account))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(Device))]
        public Principal[] Principals {
            get {
                return this.principalsField;
            }
            set {
                this.principalsField = value;
                this.RaisePropertyChanged("Principals");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public partial class DeviceGuidPrincipalId : PrincipalIdentifier {
        
        private System.Guid idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveDeviceValues", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class RemoveDeviceValuesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        public MDA.PrincipalManagement.DevicePrincipalExternalId deviceExternalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("keyName")]
        public string[] keyName;
        
        public RemoveDeviceValuesRequest() {
        }
        
        public RemoveDeviceValuesRequest(MDA.PrincipalManagement.DevicePrincipalExternalId deviceExternalId, string[] keyName) {
            this.deviceExternalId = deviceExternalId;
            this.keyName = keyName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveDeviceValuesResponse", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class RemoveDeviceValuesResponse {
        
        public RemoveDeviceValuesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateGRCMembership", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class UpdateGRCMembershipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        public string serviceGroupName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("principalGRCMembership")]
        public MDA.PrincipalManagement.PrincipalGRCMembership[] principalGRCMembership;
        
        public UpdateGRCMembershipRequest() {
        }
        
        public UpdateGRCMembershipRequest(string serviceGroupName, MDA.PrincipalManagement.PrincipalGRCMembership[] principalGRCMembership) {
            this.serviceGroupName = serviceGroupName;
            this.principalGRCMembership = principalGRCMembership;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateGRCMembershipResponse", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class UpdateGRCMembershipResponse {
        
        public UpdateGRCMembershipResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGRCMembership", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class GetGRCMembershipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        public MDA.PrincipalManagement.AccountPrincipalExternalId accountExternalID;
        
        public GetGRCMembershipRequest() {
        }
        
        public GetGRCMembershipRequest(MDA.PrincipalManagement.AccountPrincipalExternalId accountExternalID) {
            this.accountExternalID = accountExternalID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGRCMembershipResponse", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class GetGRCMembershipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetGRCMembershipResult")]
        public MDA.PrincipalManagement.GRCMembership[] GetGRCMembershipResult;
        
        public GetGRCMembershipResponse() {
        }
        
        public GetGRCMembershipResponse(MDA.PrincipalManagement.GRCMembership[] GetGRCMembershipResult) {
            this.GetGRCMembershipResult = GetGRCMembershipResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
    public enum StreamManagementProfileType {
        
        /// <remarks/>
        IngressProfile,
        
        /// <remarks/>
        EgressProfile,
        
        /// <remarks/>
        WANProfile,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupMemberships", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class GetGroupMembershipsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        public MDA.PrincipalManagement.PrincipalIdentifier principalId;
        
        public GetGroupMembershipsRequest() {
        }
        
        public GetGroupMembershipsRequest(MDA.PrincipalManagement.PrincipalIdentifier principalId) {
            this.principalId = principalId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupMembershipsResponse", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class GetGroupMembershipsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetGroupMembershipsResult")]
        public MDA.PrincipalManagement.GroupMembership[] GetGroupMembershipsResult;
        
        public GetGroupMembershipsResponse() {
        }
        
        public GetGroupMembershipsResponse(MDA.PrincipalManagement.GroupMembership[] GetGroupMembershipsResult) {
            this.GetGroupMembershipsResult = GetGroupMembershipsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveGroupMemberships", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class RemoveGroupMembershipsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        public MDA.PrincipalManagement.PrincipalIdentifier principalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("groupIds")]
        public MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds;
        
        public RemoveGroupMembershipsRequest() {
        }
        
        public RemoveGroupMembershipsRequest(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds) {
            this.principalId = principalId;
            this.groupIds = groupIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveGroupMembershipsResponse", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class RemoveGroupMembershipsResponse {
        
        public RemoveGroupMembershipsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetGroupMemberships", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class SetGroupMembershipsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        public MDA.PrincipalManagement.PrincipalIdentifier principalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("groupIds")]
        public MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds;
        
        public SetGroupMembershipsRequest() {
        }
        
        public SetGroupMembershipsRequest(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds) {
            this.principalId = principalId;
            this.groupIds = groupIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetGroupMembershipsResponse", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class SetGroupMembershipsResponse {
        
        public SetGroupMembershipsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddGroupMemberships", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class AddGroupMembershipsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        public MDA.PrincipalManagement.PrincipalIdentifier principalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("groupIds")]
        public MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds;
        
        public AddGroupMembershipsRequest() {
        }
        
        public AddGroupMembershipsRequest(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds) {
            this.principalId = principalId;
            this.groupIds = groupIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddGroupMembershipsResponse", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class AddGroupMembershipsResponse {
        
        public AddGroupMembershipsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadGroups", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class ReadGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] groupId;
        
        public ReadGroupsRequest() {
        }
        
        public ReadGroupsRequest(string[] groupId) {
            this.groupId = groupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadGroupsResponse", WrapperNamespace="http://www.microsoft.com/iptv/bss2", IsWrapped=true)]
    public partial class ReadGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.microsoft.com/iptv/bss2", Order=0)]
        public MDA.PrincipalManagement.Group1[] ReadGroupsResult;
        
        public ReadGroupsResponse() {
        }
        
        public ReadGroupsResponse(MDA.PrincipalManagement.Group1[] ReadGroupsResult) {
            this.ReadGroupsResult = ReadGroupsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PrincipalManagementInterfaceSoapChannel : MDA.PrincipalManagement.PrincipalManagementInterfaceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrincipalManagementInterfaceSoapClient : System.ServiceModel.ClientBase<MDA.PrincipalManagement.PrincipalManagementInterfaceSoap>, MDA.PrincipalManagement.PrincipalManagementInterfaceSoap {
        
        public PrincipalManagementInterfaceSoapClient() {
        }
        
        public PrincipalManagementInterfaceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrincipalManagementInterfaceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrincipalManagementInterfaceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrincipalManagementInterfaceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MDA.PrincipalManagement.RemoveDeviceValuesResponse MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.RemoveDeviceValues(MDA.PrincipalManagement.RemoveDeviceValuesRequest request) {
            return base.Channel.RemoveDeviceValues(request);
        }
        
        public void RemoveDeviceValues(MDA.PrincipalManagement.DevicePrincipalExternalId deviceExternalId, string[] keyName) {
            MDA.PrincipalManagement.RemoveDeviceValuesRequest inValue = new MDA.PrincipalManagement.RemoveDeviceValuesRequest();
            inValue.deviceExternalId = deviceExternalId;
            inValue.keyName = keyName;
            MDA.PrincipalManagement.RemoveDeviceValuesResponse retVal = ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).RemoveDeviceValues(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.RemoveDeviceValuesResponse> MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.RemoveDeviceValuesAsync(MDA.PrincipalManagement.RemoveDeviceValuesRequest request) {
            return base.Channel.RemoveDeviceValuesAsync(request);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.RemoveDeviceValuesResponse> RemoveDeviceValuesAsync(MDA.PrincipalManagement.DevicePrincipalExternalId deviceExternalId, string[] keyName) {
            MDA.PrincipalManagement.RemoveDeviceValuesRequest inValue = new MDA.PrincipalManagement.RemoveDeviceValuesRequest();
            inValue.deviceExternalId = deviceExternalId;
            inValue.keyName = keyName;
            return ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).RemoveDeviceValuesAsync(inValue);
        }
        
        public void SetGlobalValue(string key, string val) {
            base.Channel.SetGlobalValue(key, val);
        }
        
        public System.Threading.Tasks.Task SetGlobalValueAsync(string key, string val) {
            return base.Channel.SetGlobalValueAsync(key, val);
        }
        
        public void RemoveGlobalValue(string key) {
            base.Channel.RemoveGlobalValue(key);
        }
        
        public System.Threading.Tasks.Task RemoveGlobalValueAsync(string key) {
            return base.Channel.RemoveGlobalValueAsync(key);
        }
        
        public MDA.PrincipalManagement.UserstoreNameValue[] GetGlobalValue(string key) {
            return base.Channel.GetGlobalValue(key);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.UserstoreNameValue[]> GetGlobalValueAsync(string key) {
            return base.Channel.GetGlobalValueAsync(key);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MDA.PrincipalManagement.UpdateGRCMembershipResponse MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.UpdateGRCMembership(MDA.PrincipalManagement.UpdateGRCMembershipRequest request) {
            return base.Channel.UpdateGRCMembership(request);
        }
        
        public void UpdateGRCMembership(string serviceGroupName, MDA.PrincipalManagement.PrincipalGRCMembership[] principalGRCMembership) {
            MDA.PrincipalManagement.UpdateGRCMembershipRequest inValue = new MDA.PrincipalManagement.UpdateGRCMembershipRequest();
            inValue.serviceGroupName = serviceGroupName;
            inValue.principalGRCMembership = principalGRCMembership;
            MDA.PrincipalManagement.UpdateGRCMembershipResponse retVal = ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).UpdateGRCMembership(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.UpdateGRCMembershipResponse> MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.UpdateGRCMembershipAsync(MDA.PrincipalManagement.UpdateGRCMembershipRequest request) {
            return base.Channel.UpdateGRCMembershipAsync(request);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.UpdateGRCMembershipResponse> UpdateGRCMembershipAsync(string serviceGroupName, MDA.PrincipalManagement.PrincipalGRCMembership[] principalGRCMembership) {
            MDA.PrincipalManagement.UpdateGRCMembershipRequest inValue = new MDA.PrincipalManagement.UpdateGRCMembershipRequest();
            inValue.serviceGroupName = serviceGroupName;
            inValue.principalGRCMembership = principalGRCMembership;
            return ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).UpdateGRCMembershipAsync(inValue);
        }
        
        public void SetGRCMembership(MDA.PrincipalManagement.PrincipalGRCMembership principalGRCMembership) {
            base.Channel.SetGRCMembership(principalGRCMembership);
        }
        
        public System.Threading.Tasks.Task SetGRCMembershipAsync(MDA.PrincipalManagement.PrincipalGRCMembership principalGRCMembership) {
            return base.Channel.SetGRCMembershipAsync(principalGRCMembership);
        }
        
        public void RemoveGRCMembership(MDA.PrincipalManagement.AccountPrincipalExternalId accountExternalID) {
            base.Channel.RemoveGRCMembership(accountExternalID);
        }
        
        public System.Threading.Tasks.Task RemoveGRCMembershipAsync(MDA.PrincipalManagement.AccountPrincipalExternalId accountExternalID) {
            return base.Channel.RemoveGRCMembershipAsync(accountExternalID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MDA.PrincipalManagement.GetGRCMembershipResponse MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.GetGRCMembership(MDA.PrincipalManagement.GetGRCMembershipRequest request) {
            return base.Channel.GetGRCMembership(request);
        }
        
        public MDA.PrincipalManagement.GRCMembership[] GetGRCMembership(MDA.PrincipalManagement.AccountPrincipalExternalId accountExternalID) {
            MDA.PrincipalManagement.GetGRCMembershipRequest inValue = new MDA.PrincipalManagement.GetGRCMembershipRequest();
            inValue.accountExternalID = accountExternalID;
            MDA.PrincipalManagement.GetGRCMembershipResponse retVal = ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).GetGRCMembership(inValue);
            return retVal.GetGRCMembershipResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.GetGRCMembershipResponse> MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.GetGRCMembershipAsync(MDA.PrincipalManagement.GetGRCMembershipRequest request) {
            return base.Channel.GetGRCMembershipAsync(request);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.GetGRCMembershipResponse> GetGRCMembershipAsync(MDA.PrincipalManagement.AccountPrincipalExternalId accountExternalID) {
            MDA.PrincipalManagement.GetGRCMembershipRequest inValue = new MDA.PrincipalManagement.GetGRCMembershipRequest();
            inValue.accountExternalID = accountExternalID;
            return ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).GetGRCMembershipAsync(inValue);
        }
        
        public MDA.PrincipalManagement.StreamManagementProfile GetStreamManagementProfile(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType) {
            return base.Channel.GetStreamManagementProfile(principalId, profileType);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.StreamManagementProfile> GetStreamManagementProfileAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType) {
            return base.Channel.GetStreamManagementProfileAsync(principalId, profileType);
        }
        
        public void RemoveStreamManagementProfile(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType) {
            base.Channel.RemoveStreamManagementProfile(principalId, profileType);
        }
        
        public System.Threading.Tasks.Task RemoveStreamManagementProfileAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType) {
            return base.Channel.RemoveStreamManagementProfileAsync(principalId, profileType);
        }
        
        public void SetStreamManagementProfile(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType, MDA.PrincipalManagement.StreamManagementProfile profileValue) {
            base.Channel.SetStreamManagementProfile(principalId, profileType, profileValue);
        }
        
        public System.Threading.Tasks.Task SetStreamManagementProfileAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.StreamManagementProfileType profileType, MDA.PrincipalManagement.StreamManagementProfile profileValue) {
            return base.Channel.SetStreamManagementProfileAsync(principalId, profileType, profileValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MDA.PrincipalManagement.GetGroupMembershipsResponse MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.GetGroupMemberships(MDA.PrincipalManagement.GetGroupMembershipsRequest request) {
            return base.Channel.GetGroupMemberships(request);
        }
        
        public MDA.PrincipalManagement.GroupMembership[] GetGroupMemberships(MDA.PrincipalManagement.PrincipalIdentifier principalId) {
            MDA.PrincipalManagement.GetGroupMembershipsRequest inValue = new MDA.PrincipalManagement.GetGroupMembershipsRequest();
            inValue.principalId = principalId;
            MDA.PrincipalManagement.GetGroupMembershipsResponse retVal = ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).GetGroupMemberships(inValue);
            return retVal.GetGroupMembershipsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.GetGroupMembershipsResponse> MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.GetGroupMembershipsAsync(MDA.PrincipalManagement.GetGroupMembershipsRequest request) {
            return base.Channel.GetGroupMembershipsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.GetGroupMembershipsResponse> GetGroupMembershipsAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId) {
            MDA.PrincipalManagement.GetGroupMembershipsRequest inValue = new MDA.PrincipalManagement.GetGroupMembershipsRequest();
            inValue.principalId = principalId;
            return ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).GetGroupMembershipsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MDA.PrincipalManagement.RemoveGroupMembershipsResponse MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.RemoveGroupMemberships(MDA.PrincipalManagement.RemoveGroupMembershipsRequest request) {
            return base.Channel.RemoveGroupMemberships(request);
        }
        
        public void RemoveGroupMemberships(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds) {
            MDA.PrincipalManagement.RemoveGroupMembershipsRequest inValue = new MDA.PrincipalManagement.RemoveGroupMembershipsRequest();
            inValue.principalId = principalId;
            inValue.groupIds = groupIds;
            MDA.PrincipalManagement.RemoveGroupMembershipsResponse retVal = ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).RemoveGroupMemberships(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.RemoveGroupMembershipsResponse> MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.RemoveGroupMembershipsAsync(MDA.PrincipalManagement.RemoveGroupMembershipsRequest request) {
            return base.Channel.RemoveGroupMembershipsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.RemoveGroupMembershipsResponse> RemoveGroupMembershipsAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds) {
            MDA.PrincipalManagement.RemoveGroupMembershipsRequest inValue = new MDA.PrincipalManagement.RemoveGroupMembershipsRequest();
            inValue.principalId = principalId;
            inValue.groupIds = groupIds;
            return ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).RemoveGroupMembershipsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MDA.PrincipalManagement.SetGroupMembershipsResponse MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.SetGroupMemberships(MDA.PrincipalManagement.SetGroupMembershipsRequest request) {
            return base.Channel.SetGroupMemberships(request);
        }
        
        public void SetGroupMemberships(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds) {
            MDA.PrincipalManagement.SetGroupMembershipsRequest inValue = new MDA.PrincipalManagement.SetGroupMembershipsRequest();
            inValue.principalId = principalId;
            inValue.groupIds = groupIds;
            MDA.PrincipalManagement.SetGroupMembershipsResponse retVal = ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).SetGroupMemberships(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.SetGroupMembershipsResponse> MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.SetGroupMembershipsAsync(MDA.PrincipalManagement.SetGroupMembershipsRequest request) {
            return base.Channel.SetGroupMembershipsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.SetGroupMembershipsResponse> SetGroupMembershipsAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds) {
            MDA.PrincipalManagement.SetGroupMembershipsRequest inValue = new MDA.PrincipalManagement.SetGroupMembershipsRequest();
            inValue.principalId = principalId;
            inValue.groupIds = groupIds;
            return ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).SetGroupMembershipsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MDA.PrincipalManagement.AddGroupMembershipsResponse MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.AddGroupMemberships(MDA.PrincipalManagement.AddGroupMembershipsRequest request) {
            return base.Channel.AddGroupMemberships(request);
        }
        
        public void AddGroupMemberships(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds) {
            MDA.PrincipalManagement.AddGroupMembershipsRequest inValue = new MDA.PrincipalManagement.AddGroupMembershipsRequest();
            inValue.principalId = principalId;
            inValue.groupIds = groupIds;
            MDA.PrincipalManagement.AddGroupMembershipsResponse retVal = ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).AddGroupMemberships(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.AddGroupMembershipsResponse> MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.AddGroupMembershipsAsync(MDA.PrincipalManagement.AddGroupMembershipsRequest request) {
            return base.Channel.AddGroupMembershipsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.AddGroupMembershipsResponse> AddGroupMembershipsAsync(MDA.PrincipalManagement.PrincipalIdentifier principalId, MDA.PrincipalManagement.GroupPrincipalExternalId[] groupIds) {
            MDA.PrincipalManagement.AddGroupMembershipsRequest inValue = new MDA.PrincipalManagement.AddGroupMembershipsRequest();
            inValue.principalId = principalId;
            inValue.groupIds = groupIds;
            return ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).AddGroupMembershipsAsync(inValue);
        }
        
        public MDA.PrincipalManagement.Group1[] ReadAllGroups() {
            return base.Channel.ReadAllGroups();
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.Group1[]> ReadAllGroupsAsync() {
            return base.Channel.ReadAllGroupsAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MDA.PrincipalManagement.ReadGroupsResponse MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.ReadGroups(MDA.PrincipalManagement.ReadGroupsRequest request) {
            return base.Channel.ReadGroups(request);
        }
        
        public MDA.PrincipalManagement.Group1[] ReadGroups(string[] groupId) {
            MDA.PrincipalManagement.ReadGroupsRequest inValue = new MDA.PrincipalManagement.ReadGroupsRequest();
            inValue.groupId = groupId;
            MDA.PrincipalManagement.ReadGroupsResponse retVal = ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).ReadGroups(inValue);
            return retVal.ReadGroupsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.ReadGroupsResponse> MDA.PrincipalManagement.PrincipalManagementInterfaceSoap.ReadGroupsAsync(MDA.PrincipalManagement.ReadGroupsRequest request) {
            return base.Channel.ReadGroupsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.ReadGroupsResponse> ReadGroupsAsync(string[] groupId) {
            MDA.PrincipalManagement.ReadGroupsRequest inValue = new MDA.PrincipalManagement.ReadGroupsRequest();
            inValue.groupId = groupId;
            return ((MDA.PrincipalManagement.PrincipalManagementInterfaceSoap)(this)).ReadGroupsAsync(inValue);
        }
        
        public void NewUpgradeGroup(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId) {
            base.Channel.NewUpgradeGroup(groupExternalId);
        }
        
        public System.Threading.Tasks.Task NewUpgradeGroupAsync(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId) {
            return base.Channel.NewUpgradeGroupAsync(groupExternalId);
        }
        
        public void SetUpgradeGroupVersion(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId, string version) {
            base.Channel.SetUpgradeGroupVersion(groupExternalId, version);
        }
        
        public System.Threading.Tasks.Task SetUpgradeGroupVersionAsync(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId, string version) {
            return base.Channel.SetUpgradeGroupVersionAsync(groupExternalId, version);
        }
        
        public MDA.PrincipalManagement.UpgradeGroup[] GetUpgradeGroups() {
            return base.Channel.GetUpgradeGroups();
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.UpgradeGroup[]> GetUpgradeGroupsAsync() {
            return base.Channel.GetUpgradeGroupsAsync();
        }
        
        public MDA.PrincipalManagement.UpgradeGroup GetUpgradeGroup(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId) {
            return base.Channel.GetUpgradeGroup(groupExternalId);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.UpgradeGroup> GetUpgradeGroupAsync(MDA.PrincipalManagement.GroupPrincipalExternalId groupExternalId) {
            return base.Channel.GetUpgradeGroupAsync(groupExternalId);
        }
        
        public MDA.PrincipalManagement.VersionStack GetDeviceVersionStack(MDA.PrincipalManagement.DevicePrincipalExternalId deviceExternalId) {
            return base.Channel.GetDeviceVersionStack(deviceExternalId);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.VersionStack> GetDeviceVersionStackAsync(MDA.PrincipalManagement.DevicePrincipalExternalId deviceExternalId) {
            return base.Channel.GetDeviceVersionStackAsync(deviceExternalId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.microsoft.com/iptv/bss", ConfigurationName="PrincipalManagement.PrincipalManagementSoap")]
    public interface PrincipalManagementSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/CreateGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void CreateGroup(MDA.PrincipalManagement.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/CreateGroup", ReplyAction="*")]
        System.Threading.Tasks.Task CreateGroupAsync(MDA.PrincipalManagement.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void DeleteGroup(string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteGroup", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteGroupAsync(string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.Group[] ReadGroup(string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.Group[]> ReadGroupAsync(string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateGroupStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateGroupStatus(MDA.PrincipalManagement.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateGroupStatus", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateGroupStatusAsync(MDA.PrincipalManagement.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateGroupType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateGroupType(MDA.PrincipalManagement.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateGroupType", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateGroupTypeAsync(MDA.PrincipalManagement.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateGroupPrincipals", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateGroupPrincipals(MDA.PrincipalManagement.Group group, bool remove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateGroupPrincipals", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateGroupPrincipalsAsync(MDA.PrincipalManagement.Group group, bool remove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/CreateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void CreateAccount(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/CreateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task CreateAccountAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void DeleteAccount(string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAccount", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteAccountAsync(string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.Account[] ReadAccount(string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.Account[]> ReadAccountAsync(string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountDevices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountDevices(MDA.PrincipalManagement.Account account, bool remove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountDevices", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountDevicesAsync(MDA.PrincipalManagement.Account account, bool remove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountUsers(MDA.PrincipalManagement.Account account, bool remove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountUsers", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountUsersAsync(MDA.PrincipalManagement.Account account, bool remove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountStatus(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountStatus", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountStatusAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountPin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountPin(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountPin", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountPinAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountCreditLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountCreditLimit(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountCreditLimit", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountCreditLimitAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountTimeZone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountTimeZone(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountTimeZone", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountTimeZoneAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountDVRStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountDVRStatus(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountDVRStatus", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountDVRStatusAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountRecordingDeviceId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountRecordingDeviceId(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountRecordingDeviceId", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountRecordingDeviceIdAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountHDStreams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountHDStreams(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountHDStreams", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountHDStreamsAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountSDStreams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountSDStreams(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountSDStreams", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountSDStreamsAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountExternalId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountExternalId(string oldAccountExternalId, string newAccountExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountExternalId", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountExternalIdAsync(string oldAccountExternalId, string newAccountExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ProvisionDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void ProvisionDevice(System.Guid deviceId, string deviceName, string accountNativeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ProvisionDevice", ReplyAction="*")]
        System.Threading.Tasks.Task ProvisionDeviceAsync(System.Guid deviceId, string deviceName, string accountNativeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void DeleteUser(MDA.PrincipalManagement.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteUser", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteUserAsync(MDA.PrincipalManagement.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.User[] ReadUser(MDA.PrincipalManagement.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadUser", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.User[]> ReadUserAsync(MDA.PrincipalManagement.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateUserPin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateUserPin(MDA.PrincipalManagement.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateUserPin", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateUserPinAsync(MDA.PrincipalManagement.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateUserStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateUserStatus(MDA.PrincipalManagement.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateUserStatus", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateUserStatusAsync(MDA.PrincipalManagement.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateDeviceStatus(MDA.PrincipalManagement.Device device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceStatus", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateDeviceStatusAsync(MDA.PrincipalManagement.Device device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceExternalId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateDeviceExternalId(string oldDeviceExternalId, string newDeviceExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceExternalId", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateDeviceExternalIdAsync(string oldDeviceExternalId, string newDeviceExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDevicePin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateDevicePin(MDA.PrincipalManagement.Device device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDevicePin", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateDevicePinAsync(MDA.PrincipalManagement.Device device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDevicePinByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.PinStatus UpdateDevicePinByType(System.Guid deviceId, string oldPin, string newPin, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDevicePinByType", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.PinStatus> UpdateDevicePinByTypeAsync(System.Guid deviceId, string oldPin, string newPin, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteDevicePinByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void DeleteDevicePinByType(System.Guid deviceId, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteDevicePinByType", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteDevicePinByTypeAsync(System.Guid deviceId, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteDevicePin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void DeleteDevicePin(System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteDevicePin", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteDevicePinAsync(System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateForbiddenPins", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateForbiddenPins(string[] pins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateForbiddenPins", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateForbiddenPinsAsync(string[] pins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadDevicePins", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.PinInfo[] ReadDevicePins(System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadDevicePins", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.PinInfo[]> ReadDevicePinsAsync(System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadForbiddenPins", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        string[] ReadForbiddenPins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadForbiddenPins", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ReadForbiddenPinsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ResetDevicePinByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.PinStatus ResetDevicePinByType(System.Guid deviceId, string pin, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ResetDevicePinByType", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.PinStatus> ResetDevicePinByTypeAsync(System.Guid deviceId, string pin, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateDeviceVersion(MDA.PrincipalManagement.Device device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceVersion", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateDeviceVersionAsync(MDA.PrincipalManagement.Device device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadAllDeviceValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.DeviceValue[] ReadAllDeviceValues(string deviceExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadAllDeviceValues", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.DeviceValue[]> ReadAllDeviceValuesAsync(string deviceExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAllDeviceValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void DeleteAllDeviceValues(string deviceExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAllDeviceValues", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteAllDeviceValuesAsync(string deviceExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateDeviceValues(string deviceExternalID, MDA.PrincipalManagement.DeviceValue[] deviceValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceValues", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateDeviceValuesAsync(string deviceExternalID, MDA.PrincipalManagement.DeviceValue[] deviceValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceValuesAndNotify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateDeviceValuesAndNotify(string deviceExternalID, MDA.PrincipalManagement.DeviceValue[] deviceValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateDeviceValuesAndNotify", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateDeviceValuesAndNotifyAsync(string deviceExternalID, MDA.PrincipalManagement.DeviceValue[] deviceValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.Device[] ReadDevice(string deviceExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadDevice", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.Device[]> ReadDeviceAsync(string deviceExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadDeviceByGuid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.Device ReadDeviceByGuid(System.Guid deviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadDeviceByGuid", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.Device> ReadDeviceByGuidAsync(System.Guid deviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateEnableDateForAllPins", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateEnableDateForAllPins(string deviceExternalId, System.DateTime enableDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateEnableDateForAllPins", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateEnableDateForAllPinsAsync(string deviceExternalId, System.DateTime enableDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateEnableDateForPinByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateEnableDateForPinByType(string deviceExternalId, short type, System.DateTime enableDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateEnableDateForPinByType", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateEnableDateForPinByTypeAsync(string deviceExternalId, short type, System.DateTime enableDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadDeviceGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.SubscriberGroup[] ReadDeviceGroups(MDA.PrincipalManagement.Device account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadDeviceGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.SubscriberGroup[]> ReadDeviceGroupsAsync(MDA.PrincipalManagement.Device account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadAccountGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.SubscriberGroup[] ReadAccountGroups(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadAccountGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.SubscriberGroup[]> ReadAccountGroupsAsync(MDA.PrincipalManagement.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/SetGlobalDeviceValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void SetGlobalDeviceValues(MDA.PrincipalManagement.ClientSettingKey key, string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/SetGlobalDeviceValues", ReplyAction="*")]
        System.Threading.Tasks.Task SetGlobalDeviceValuesAsync(MDA.PrincipalManagement.ClientSettingKey key, string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/GetGlobalDeviceValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        string GetGlobalDeviceValues(MDA.PrincipalManagement.ClientSettingKey key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/GetGlobalDeviceValues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetGlobalDeviceValuesAsync(MDA.PrincipalManagement.ClientSettingKey key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadAllAccountValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        MDA.PrincipalManagement.AccountValue[] ReadAllAccountValues(string accountExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/ReadAllAccountValues", ReplyAction="*")]
        System.Threading.Tasks.Task<MDA.PrincipalManagement.AccountValue[]> ReadAllAccountValuesAsync(string accountExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountValues(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountValues", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountValuesAsync(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAccountValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void DeleteAccountValues(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAccountValues", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteAccountValuesAsync(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountValuesAndNotify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountValuesAndNotify(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountValuesAndNotify", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountValuesAndNotifyAsync(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAllAccountValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void DeleteAllAccountValues(string accountExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAllAccountValues", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteAllAccountValuesAsync(string accountExternalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAccountValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void DeleteAccountValue(string accountExternalID, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/DeleteAccountValue", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteAccountValueAsync(string accountExternalID, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountStreamAllocations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Principal))]
        void UpdateAccountStreamAllocations(string[] accountExternalIds, MDA.PrincipalManagement.StreamAllocation streamAllocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.microsoft.com/iptv/bss/UpdateAccountStreamAllocations", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAccountStreamAllocationsAsync(string[] accountExternalIds, MDA.PrincipalManagement.StreamAllocation streamAllocation);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public enum PinStatus {
        
        /// <remarks/>
        NoError,
        
        /// <remarks/>
        Forbidden,
        
        /// <remarks/>
        NoMatch,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public enum ClientSettingKey {
        
        /// <remarks/>
        AdultPinRetryLimit,
        
        /// <remarks/>
        AdultPinRetryTimeoutMinutes,
        
        /// <remarks/>
        AdultRatingLocked,
        
        /// <remarks/>
        AdultUnlockPeriodInMinutes,
        
        /// <remarks/>
        AppHelpURL,
        
        /// <remarks/>
        AppKeyURL1,
        
        /// <remarks/>
        AppKeyURL2,
        
        /// <remarks/>
        AppKeyURL3,
        
        /// <remarks/>
        AppKeyURL4,
        
        /// <remarks/>
        AppKeyURL5,
        
        /// <remarks/>
        AppKeyURL6,
        
        /// <remarks/>
        CGMSA_CopyFreely_Buffering,
        
        /// <remarks/>
        CGMSA_CopyFreely_Recording,
        
        /// <remarks/>
        CGMSA_CopyNever_Buffering,
        
        /// <remarks/>
        CGMSA_CopyNever_Recording,
        
        /// <remarks/>
        CGMSA_CopyOnce_Buffering,
        
        /// <remarks/>
        CGMSA_CopyOnce_Recording,
        
        /// <remarks/>
        ClientMenus,
        
        /// <remarks/>
        CreditLimitChangeApp,
        
        /// <remarks/>
        CustomStrings,
        
        /// <remarks/>
        DetuneTimeoutHours,
        
        /// <remarks/>
        DisabledEventIds,
        
        /// <remarks/>
        DisableICC,
        
        /// <remarks/>
        DvrSkip,
        
        /// <remarks/>
        EITCountryCode,
        
        /// <remarks/>
        EITRatingSystem,
        
        /// <remarks/>
        EnabledPinTypes,
        
        /// <remarks/>
        EventQueueSize,
        
        /// <remarks/>
        EventUploadHours,
        
        /// <remarks/>
        ExposedUserStoreKeys,
        
        /// <remarks/>
        FIPS,
        
        /// <remarks/>
        HideNoRightsChannels,
        
        /// <remarks/>
        ParentalControlState,
        
        /// <remarks/>
        PauseBufferLength,
        
        /// <remarks/>
        PConUnlockPeriodInMinutes,
        
        /// <remarks/>
        PinRetryLimit,
        
        /// <remarks/>
        PinRetryTimeoutMinutes,
        
        /// <remarks/>
        PurchasePinRetryLimit,
        
        /// <remarks/>
        PurchasePinRetryTimeoutMinutes,
        
        /// <remarks/>
        RelockOnChannelChange,
        
        /// <remarks/>
        RequirePinToRecordBlockedShows,
        
        /// <remarks/>
        ScreenSaverTimeoutMinutes,
        
        /// <remarks/>
        SecondsToBlockDescriptionRequests,
        
        /// <remarks/>
        UniverseDefinition,
        
        /// <remarks/>
        AvailableUniverses,
        
        /// <remarks/>
        ActiveUniverse,
        
        /// <remarks/>
        CanDetuneOnAlert,
        
        /// <remarks/>
        EAS911MediaDescriptor,
        
        /// <remarks/>
        ShowAlertConfirmDialog,
        
        /// <remarks/>
        AlertToneDuration,
        
        /// <remarks/>
        PremiumServiceOverride,
        
        /// <remarks/>
        LiveServiceOverrideDefault,
        
        /// <remarks/>
        DevicePinSize,
        
        /// <remarks/>
        SendServerSessionId,
        
        /// <remarks/>
        SslKeyPairAndCert,
        
        /// <remarks/>
        SslTrustedRootCerts,
        
        /// <remarks/>
        SslIntermediateCerts,
        
        /// <remarks/>
        ServerChannelsMappedFirst,
        
        /// <remarks/>
        TuneEvtLogSeconds,
        
        /// <remarks/>
        UseMappedServerChannelsOnly,
        
        /// <remarks/>
        DvrNotificationDelay,
        
        /// <remarks/>
        AllowChannelReordering,
        
        /// <remarks/>
        VodBlockSizeKB,
        
        /// <remarks/>
        VodMaxReadSizeKB,
        
        /// <remarks/>
        VodInitialMinDataRateKbs,
        
        /// <remarks/>
        VodMaxSessionCount,
        
        /// <remarks/>
        IndividualFuzz,
        
        /// <remarks/>
        IndividualFudge,
        
        /// <remarks/>
        IndividualFloor,
        
        /// <remarks/>
        IndividualMCT,
        
        /// <remarks/>
        IndividualDCT,
        
        /// <remarks/>
        LiveServicesEnabled,
        
        /// <remarks/>
        WebProxyConfiguration,
        
        /// <remarks/>
        NavigationTargetMappingFile,
        
        /// <remarks/>
        IngressProfile,
        
        /// <remarks/>
        EgressProfile,
        
        /// <remarks/>
        EITRatingSystem_Name,
        
        /// <remarks/>
        EnableEPGPhase2Guide,
        
        /// <remarks/>
        GuideBrowseBarMinimumHours,
        
        /// <remarks/>
        GuideCurrentWindowMinimumHours,
        
        /// <remarks/>
        GuideDataStoreFileCount,
        
        /// <remarks/>
        GuideDataStoreFileMinimumSize,
        
        /// <remarks/>
        GuideDataStoreMaxSize,
        
        /// <remarks/>
        GuideDataStoreName,
        
        /// <remarks/>
        GuideDisplayReserve,
        
        /// <remarks/>
        GuideEnableServerPolling,
        
        /// <remarks/>
        GuideFailureRetrySpanSeconds,
        
        /// <remarks/>
        GuideFailureRetryStartSeconds,
        
        /// <remarks/>
        GuideFutureWindowMinimumHours,
        
        /// <remarks/>
        GuideIISDownloadBlockSize,
        
        /// <remarks/>
        GuideIISDownloadSleepTimeMS,
        
        /// <remarks/>
        GuideMinimumRequiredListingsHours,
        
        /// <remarks/>
        GuideNumFutureWindows,
        
        /// <remarks/>
        GuideNumFutureWindows_Channel,
        
        /// <remarks/>
        GuideStationsPerRequest_Current,
        
        /// <remarks/>
        GuideStationsPerRequest_Future,
        
        /// <remarks/>
        GuideStationsPerRequest_MD,
        
        /// <remarks/>
        GuideUpdateSpreadSeconds,
        
        /// <remarks/>
        GuideWindowSizeHours_Current,
        
        /// <remarks/>
        GuideWindowSizeHours_Future,
        
        /// <remarks/>
        ActivityLoggingEnabled,
        
        /// <remarks/>
        TriggerSet,
        
        /// <remarks/>
        ClientStore,
        
        /// <remarks/>
        LastVolume,
        
        /// <remarks/>
        DownloadAndPlayQueueUpdateIntervalMinutes,
        
        /// <remarks/>
        EnableSeriesPriority,
        
        /// <remarks/>
        MapFeatures,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PrincipalManagementSoapChannel : MDA.PrincipalManagement.PrincipalManagementSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrincipalManagementSoapClient : System.ServiceModel.ClientBase<MDA.PrincipalManagement.PrincipalManagementSoap>, MDA.PrincipalManagement.PrincipalManagementSoap {
        
        public PrincipalManagementSoapClient() {
        }
        
        public PrincipalManagementSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrincipalManagementSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrincipalManagementSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrincipalManagementSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateGroup(MDA.PrincipalManagement.Group group) {
            base.Channel.CreateGroup(group);
        }
        
        public System.Threading.Tasks.Task CreateGroupAsync(MDA.PrincipalManagement.Group group) {
            return base.Channel.CreateGroupAsync(group);
        }
        
        public void DeleteGroup(string externalId) {
            base.Channel.DeleteGroup(externalId);
        }
        
        public System.Threading.Tasks.Task DeleteGroupAsync(string externalId) {
            return base.Channel.DeleteGroupAsync(externalId);
        }
        
        public MDA.PrincipalManagement.Group[] ReadGroup(string externalId) {
            return base.Channel.ReadGroup(externalId);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.Group[]> ReadGroupAsync(string externalId) {
            return base.Channel.ReadGroupAsync(externalId);
        }
        
        public void UpdateGroupStatus(MDA.PrincipalManagement.Group group) {
            base.Channel.UpdateGroupStatus(group);
        }
        
        public System.Threading.Tasks.Task UpdateGroupStatusAsync(MDA.PrincipalManagement.Group group) {
            return base.Channel.UpdateGroupStatusAsync(group);
        }
        
        public void UpdateGroupType(MDA.PrincipalManagement.Group group) {
            base.Channel.UpdateGroupType(group);
        }
        
        public System.Threading.Tasks.Task UpdateGroupTypeAsync(MDA.PrincipalManagement.Group group) {
            return base.Channel.UpdateGroupTypeAsync(group);
        }
        
        public void UpdateGroupPrincipals(MDA.PrincipalManagement.Group group, bool remove) {
            base.Channel.UpdateGroupPrincipals(group, remove);
        }
        
        public System.Threading.Tasks.Task UpdateGroupPrincipalsAsync(MDA.PrincipalManagement.Group group, bool remove) {
            return base.Channel.UpdateGroupPrincipalsAsync(group, remove);
        }
        
        public void CreateAccount(MDA.PrincipalManagement.Account account) {
            base.Channel.CreateAccount(account);
        }
        
        public System.Threading.Tasks.Task CreateAccountAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.CreateAccountAsync(account);
        }
        
        public void DeleteAccount(string externalId) {
            base.Channel.DeleteAccount(externalId);
        }
        
        public System.Threading.Tasks.Task DeleteAccountAsync(string externalId) {
            return base.Channel.DeleteAccountAsync(externalId);
        }
        
        public MDA.PrincipalManagement.Account[] ReadAccount(string externalId) {
            return base.Channel.ReadAccount(externalId);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.Account[]> ReadAccountAsync(string externalId) {
            return base.Channel.ReadAccountAsync(externalId);
        }
        
        public void UpdateAccountDevices(MDA.PrincipalManagement.Account account, bool remove) {
            base.Channel.UpdateAccountDevices(account, remove);
        }
        
        public System.Threading.Tasks.Task UpdateAccountDevicesAsync(MDA.PrincipalManagement.Account account, bool remove) {
            return base.Channel.UpdateAccountDevicesAsync(account, remove);
        }
        
        public void UpdateAccountUsers(MDA.PrincipalManagement.Account account, bool remove) {
            base.Channel.UpdateAccountUsers(account, remove);
        }
        
        public System.Threading.Tasks.Task UpdateAccountUsersAsync(MDA.PrincipalManagement.Account account, bool remove) {
            return base.Channel.UpdateAccountUsersAsync(account, remove);
        }
        
        public void UpdateAccountStatus(MDA.PrincipalManagement.Account account) {
            base.Channel.UpdateAccountStatus(account);
        }
        
        public System.Threading.Tasks.Task UpdateAccountStatusAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.UpdateAccountStatusAsync(account);
        }
        
        public void UpdateAccountPin(MDA.PrincipalManagement.Account account) {
            base.Channel.UpdateAccountPin(account);
        }
        
        public System.Threading.Tasks.Task UpdateAccountPinAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.UpdateAccountPinAsync(account);
        }
        
        public void UpdateAccountCreditLimit(MDA.PrincipalManagement.Account account) {
            base.Channel.UpdateAccountCreditLimit(account);
        }
        
        public System.Threading.Tasks.Task UpdateAccountCreditLimitAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.UpdateAccountCreditLimitAsync(account);
        }
        
        public void UpdateAccountTimeZone(MDA.PrincipalManagement.Account account) {
            base.Channel.UpdateAccountTimeZone(account);
        }
        
        public System.Threading.Tasks.Task UpdateAccountTimeZoneAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.UpdateAccountTimeZoneAsync(account);
        }
        
        public void UpdateAccountDVRStatus(MDA.PrincipalManagement.Account account) {
            base.Channel.UpdateAccountDVRStatus(account);
        }
        
        public System.Threading.Tasks.Task UpdateAccountDVRStatusAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.UpdateAccountDVRStatusAsync(account);
        }
        
        public void UpdateAccountRecordingDeviceId(MDA.PrincipalManagement.Account account) {
            base.Channel.UpdateAccountRecordingDeviceId(account);
        }
        
        public System.Threading.Tasks.Task UpdateAccountRecordingDeviceIdAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.UpdateAccountRecordingDeviceIdAsync(account);
        }
        
        public void UpdateAccountHDStreams(MDA.PrincipalManagement.Account account) {
            base.Channel.UpdateAccountHDStreams(account);
        }
        
        public System.Threading.Tasks.Task UpdateAccountHDStreamsAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.UpdateAccountHDStreamsAsync(account);
        }
        
        public void UpdateAccountSDStreams(MDA.PrincipalManagement.Account account) {
            base.Channel.UpdateAccountSDStreams(account);
        }
        
        public System.Threading.Tasks.Task UpdateAccountSDStreamsAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.UpdateAccountSDStreamsAsync(account);
        }
        
        public void UpdateAccountExternalId(string oldAccountExternalId, string newAccountExternalId) {
            base.Channel.UpdateAccountExternalId(oldAccountExternalId, newAccountExternalId);
        }
        
        public System.Threading.Tasks.Task UpdateAccountExternalIdAsync(string oldAccountExternalId, string newAccountExternalId) {
            return base.Channel.UpdateAccountExternalIdAsync(oldAccountExternalId, newAccountExternalId);
        }
        
        public void ProvisionDevice(System.Guid deviceId, string deviceName, string accountNativeId) {
            base.Channel.ProvisionDevice(deviceId, deviceName, accountNativeId);
        }
        
        public System.Threading.Tasks.Task ProvisionDeviceAsync(System.Guid deviceId, string deviceName, string accountNativeId) {
            return base.Channel.ProvisionDeviceAsync(deviceId, deviceName, accountNativeId);
        }
        
        public void DeleteUser(MDA.PrincipalManagement.User user) {
            base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(MDA.PrincipalManagement.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public MDA.PrincipalManagement.User[] ReadUser(MDA.PrincipalManagement.User user) {
            return base.Channel.ReadUser(user);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.User[]> ReadUserAsync(MDA.PrincipalManagement.User user) {
            return base.Channel.ReadUserAsync(user);
        }
        
        public void UpdateUserPin(MDA.PrincipalManagement.User user) {
            base.Channel.UpdateUserPin(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserPinAsync(MDA.PrincipalManagement.User user) {
            return base.Channel.UpdateUserPinAsync(user);
        }
        
        public void UpdateUserStatus(MDA.PrincipalManagement.User user) {
            base.Channel.UpdateUserStatus(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserStatusAsync(MDA.PrincipalManagement.User user) {
            return base.Channel.UpdateUserStatusAsync(user);
        }
        
        public void UpdateDeviceStatus(MDA.PrincipalManagement.Device device) {
            base.Channel.UpdateDeviceStatus(device);
        }
        
        public System.Threading.Tasks.Task UpdateDeviceStatusAsync(MDA.PrincipalManagement.Device device) {
            return base.Channel.UpdateDeviceStatusAsync(device);
        }
        
        public void UpdateDeviceExternalId(string oldDeviceExternalId, string newDeviceExternalId) {
            base.Channel.UpdateDeviceExternalId(oldDeviceExternalId, newDeviceExternalId);
        }
        
        public System.Threading.Tasks.Task UpdateDeviceExternalIdAsync(string oldDeviceExternalId, string newDeviceExternalId) {
            return base.Channel.UpdateDeviceExternalIdAsync(oldDeviceExternalId, newDeviceExternalId);
        }
        
        public void UpdateDevicePin(MDA.PrincipalManagement.Device device) {
            base.Channel.UpdateDevicePin(device);
        }
        
        public System.Threading.Tasks.Task UpdateDevicePinAsync(MDA.PrincipalManagement.Device device) {
            return base.Channel.UpdateDevicePinAsync(device);
        }
        
        public MDA.PrincipalManagement.PinStatus UpdateDevicePinByType(System.Guid deviceId, string oldPin, string newPin, short type) {
            return base.Channel.UpdateDevicePinByType(deviceId, oldPin, newPin, type);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.PinStatus> UpdateDevicePinByTypeAsync(System.Guid deviceId, string oldPin, string newPin, short type) {
            return base.Channel.UpdateDevicePinByTypeAsync(deviceId, oldPin, newPin, type);
        }
        
        public void DeleteDevicePinByType(System.Guid deviceId, short type) {
            base.Channel.DeleteDevicePinByType(deviceId, type);
        }
        
        public System.Threading.Tasks.Task DeleteDevicePinByTypeAsync(System.Guid deviceId, short type) {
            return base.Channel.DeleteDevicePinByTypeAsync(deviceId, type);
        }
        
        public void DeleteDevicePin(System.Guid deviceId) {
            base.Channel.DeleteDevicePin(deviceId);
        }
        
        public System.Threading.Tasks.Task DeleteDevicePinAsync(System.Guid deviceId) {
            return base.Channel.DeleteDevicePinAsync(deviceId);
        }
        
        public void UpdateForbiddenPins(string[] pins) {
            base.Channel.UpdateForbiddenPins(pins);
        }
        
        public System.Threading.Tasks.Task UpdateForbiddenPinsAsync(string[] pins) {
            return base.Channel.UpdateForbiddenPinsAsync(pins);
        }
        
        public MDA.PrincipalManagement.PinInfo[] ReadDevicePins(System.Guid deviceId) {
            return base.Channel.ReadDevicePins(deviceId);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.PinInfo[]> ReadDevicePinsAsync(System.Guid deviceId) {
            return base.Channel.ReadDevicePinsAsync(deviceId);
        }
        
        public string[] ReadForbiddenPins() {
            return base.Channel.ReadForbiddenPins();
        }
        
        public System.Threading.Tasks.Task<string[]> ReadForbiddenPinsAsync() {
            return base.Channel.ReadForbiddenPinsAsync();
        }
        
        public MDA.PrincipalManagement.PinStatus ResetDevicePinByType(System.Guid deviceId, string pin, short type) {
            return base.Channel.ResetDevicePinByType(deviceId, pin, type);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.PinStatus> ResetDevicePinByTypeAsync(System.Guid deviceId, string pin, short type) {
            return base.Channel.ResetDevicePinByTypeAsync(deviceId, pin, type);
        }
        
        public void UpdateDeviceVersion(MDA.PrincipalManagement.Device device) {
            base.Channel.UpdateDeviceVersion(device);
        }
        
        public System.Threading.Tasks.Task UpdateDeviceVersionAsync(MDA.PrincipalManagement.Device device) {
            return base.Channel.UpdateDeviceVersionAsync(device);
        }
        
        public MDA.PrincipalManagement.DeviceValue[] ReadAllDeviceValues(string deviceExternalID) {
            return base.Channel.ReadAllDeviceValues(deviceExternalID);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.DeviceValue[]> ReadAllDeviceValuesAsync(string deviceExternalID) {
            return base.Channel.ReadAllDeviceValuesAsync(deviceExternalID);
        }
        
        public void DeleteAllDeviceValues(string deviceExternalID) {
            base.Channel.DeleteAllDeviceValues(deviceExternalID);
        }
        
        public System.Threading.Tasks.Task DeleteAllDeviceValuesAsync(string deviceExternalID) {
            return base.Channel.DeleteAllDeviceValuesAsync(deviceExternalID);
        }
        
        public void UpdateDeviceValues(string deviceExternalID, MDA.PrincipalManagement.DeviceValue[] deviceValues) {
            base.Channel.UpdateDeviceValues(deviceExternalID, deviceValues);
        }
        
        public System.Threading.Tasks.Task UpdateDeviceValuesAsync(string deviceExternalID, MDA.PrincipalManagement.DeviceValue[] deviceValues) {
            return base.Channel.UpdateDeviceValuesAsync(deviceExternalID, deviceValues);
        }
        
        public void UpdateDeviceValuesAndNotify(string deviceExternalID, MDA.PrincipalManagement.DeviceValue[] deviceValues) {
            base.Channel.UpdateDeviceValuesAndNotify(deviceExternalID, deviceValues);
        }
        
        public System.Threading.Tasks.Task UpdateDeviceValuesAndNotifyAsync(string deviceExternalID, MDA.PrincipalManagement.DeviceValue[] deviceValues) {
            return base.Channel.UpdateDeviceValuesAndNotifyAsync(deviceExternalID, deviceValues);
        }
        
        public MDA.PrincipalManagement.Device[] ReadDevice(string deviceExternalID) {
            return base.Channel.ReadDevice(deviceExternalID);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.Device[]> ReadDeviceAsync(string deviceExternalID) {
            return base.Channel.ReadDeviceAsync(deviceExternalID);
        }
        
        public MDA.PrincipalManagement.Device ReadDeviceByGuid(System.Guid deviceID) {
            return base.Channel.ReadDeviceByGuid(deviceID);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.Device> ReadDeviceByGuidAsync(System.Guid deviceID) {
            return base.Channel.ReadDeviceByGuidAsync(deviceID);
        }
        
        public void UpdateEnableDateForAllPins(string deviceExternalId, System.DateTime enableDate) {
            base.Channel.UpdateEnableDateForAllPins(deviceExternalId, enableDate);
        }
        
        public System.Threading.Tasks.Task UpdateEnableDateForAllPinsAsync(string deviceExternalId, System.DateTime enableDate) {
            return base.Channel.UpdateEnableDateForAllPinsAsync(deviceExternalId, enableDate);
        }
        
        public void UpdateEnableDateForPinByType(string deviceExternalId, short type, System.DateTime enableDate) {
            base.Channel.UpdateEnableDateForPinByType(deviceExternalId, type, enableDate);
        }
        
        public System.Threading.Tasks.Task UpdateEnableDateForPinByTypeAsync(string deviceExternalId, short type, System.DateTime enableDate) {
            return base.Channel.UpdateEnableDateForPinByTypeAsync(deviceExternalId, type, enableDate);
        }
        
        public MDA.PrincipalManagement.SubscriberGroup[] ReadDeviceGroups(MDA.PrincipalManagement.Device account) {
            return base.Channel.ReadDeviceGroups(account);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.SubscriberGroup[]> ReadDeviceGroupsAsync(MDA.PrincipalManagement.Device account) {
            return base.Channel.ReadDeviceGroupsAsync(account);
        }
        
        public MDA.PrincipalManagement.SubscriberGroup[] ReadAccountGroups(MDA.PrincipalManagement.Account account) {
            return base.Channel.ReadAccountGroups(account);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.SubscriberGroup[]> ReadAccountGroupsAsync(MDA.PrincipalManagement.Account account) {
            return base.Channel.ReadAccountGroupsAsync(account);
        }
        
        public void SetGlobalDeviceValues(MDA.PrincipalManagement.ClientSettingKey key, string val) {
            base.Channel.SetGlobalDeviceValues(key, val);
        }
        
        public System.Threading.Tasks.Task SetGlobalDeviceValuesAsync(MDA.PrincipalManagement.ClientSettingKey key, string val) {
            return base.Channel.SetGlobalDeviceValuesAsync(key, val);
        }
        
        public string GetGlobalDeviceValues(MDA.PrincipalManagement.ClientSettingKey key) {
            return base.Channel.GetGlobalDeviceValues(key);
        }
        
        public System.Threading.Tasks.Task<string> GetGlobalDeviceValuesAsync(MDA.PrincipalManagement.ClientSettingKey key) {
            return base.Channel.GetGlobalDeviceValuesAsync(key);
        }
        
        public MDA.PrincipalManagement.AccountValue[] ReadAllAccountValues(string accountExternalID) {
            return base.Channel.ReadAllAccountValues(accountExternalID);
        }
        
        public System.Threading.Tasks.Task<MDA.PrincipalManagement.AccountValue[]> ReadAllAccountValuesAsync(string accountExternalID) {
            return base.Channel.ReadAllAccountValuesAsync(accountExternalID);
        }
        
        public void UpdateAccountValues(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues) {
            base.Channel.UpdateAccountValues(accountExternalID, accountValues);
        }
        
        public System.Threading.Tasks.Task UpdateAccountValuesAsync(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues) {
            return base.Channel.UpdateAccountValuesAsync(accountExternalID, accountValues);
        }
        
        public void DeleteAccountValues(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues) {
            base.Channel.DeleteAccountValues(accountExternalID, accountValues);
        }
        
        public System.Threading.Tasks.Task DeleteAccountValuesAsync(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues) {
            return base.Channel.DeleteAccountValuesAsync(accountExternalID, accountValues);
        }
        
        public void UpdateAccountValuesAndNotify(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues) {
            base.Channel.UpdateAccountValuesAndNotify(accountExternalID, accountValues);
        }
        
        public System.Threading.Tasks.Task UpdateAccountValuesAndNotifyAsync(string accountExternalID, MDA.PrincipalManagement.AccountValue[] accountValues) {
            return base.Channel.UpdateAccountValuesAndNotifyAsync(accountExternalID, accountValues);
        }
        
        public void DeleteAllAccountValues(string accountExternalID) {
            base.Channel.DeleteAllAccountValues(accountExternalID);
        }
        
        public System.Threading.Tasks.Task DeleteAllAccountValuesAsync(string accountExternalID) {
            return base.Channel.DeleteAllAccountValuesAsync(accountExternalID);
        }
        
        public void DeleteAccountValue(string accountExternalID, string key) {
            base.Channel.DeleteAccountValue(accountExternalID, key);
        }
        
        public System.Threading.Tasks.Task DeleteAccountValueAsync(string accountExternalID, string key) {
            return base.Channel.DeleteAccountValueAsync(accountExternalID, key);
        }
        
        public void UpdateAccountStreamAllocations(string[] accountExternalIds, MDA.PrincipalManagement.StreamAllocation streamAllocation) {
            base.Channel.UpdateAccountStreamAllocations(accountExternalIds, streamAllocation);
        }
        
        public System.Threading.Tasks.Task UpdateAccountStreamAllocationsAsync(string[] accountExternalIds, MDA.PrincipalManagement.StreamAllocation streamAllocation) {
            return base.Channel.UpdateAccountStreamAllocationsAsync(accountExternalIds, streamAllocation);
        }
    }
}
